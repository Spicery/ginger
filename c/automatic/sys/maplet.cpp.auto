Ref * sysNewMaplet( Ref * pc, class MachineClass * vm ) {
    if ( vm->count == 2 ) {
        XfrClass xfr( vm->heap().preflight( pc, 3 ) );
        xfr.setOrigin();
        xfr.xfrRef( sysMapletKey );
        Ref f1 = vm->fastPop();
        Ref f0 = vm->fastPop();
        xfr.xfrRef( f0 );
        xfr.xfrRef( f1 );
        vm->fastPush( xfr.make() );
        return pc;
    } else {
        throw Mishap( "Wrong number of arguments for sysNewMaplet" );
    }
}

Ref * sysIsMaplet( Ref * pc, class MachineClass * vm ) {
    if ( vm->count == 1 ) {
        Ref r = vm->fastPeek();
        vm->fastPeek() = IsPtr4( r ) && ( *RefToPtr4( r ) == sysMapletKey ) ? sys_true : sys_false;
        return pc;
    } else {
        throw Mishap( "Wrong number of arguments for head" );
    }
}

Ref * sysMapletKeyField( Ref * pc, class MachineClass * vm ) {
    if ( vm->count == 1 ) {
        Ref x = vm->fastPeek();
        if ( refKey( x ) == sysMapletKey ) {
            vm->fastPeek() = RefToPtr4( x )[ 1 ];
        } else {
            throw Mishap( "Trying to take the mapletKey of non-Maplet" );
        }
        return pc;
    } else {
        throw Mishap( "Wrong number of arguments" );
    }
}

Ref * sysMapletValueField( Ref * pc, class MachineClass * vm ) {
    if ( vm->count == 1 ) {
        Ref x = vm->fastPeek();
        if ( refKey( x ) == sysMapletKey ) {
            vm->fastPeek() = RefToPtr4( x )[ 2 ];
        } else {
            throw Mishap( "Trying to take the mapletValue of non-Maplet" );
        }
        return pc;
    } else {
        throw Mishap( "Wrong number of arguments" );
    }
}

