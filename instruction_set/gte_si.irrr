/*****************************************************************************\
Instruction GTE_SI LOCAL_S VALUE_B JUMP_D

Summary
	Compares a local variable LOCAL_S using greater than or equal to versus a 
	number VALUE_B and if true jumps to JUMP_D, otherwise falls through.

	
Unchecked Precondition
	
Exceptions (Checked Preconditions)
	
Result (Postcondition)		

\*****************************************************************************/

long s = ToLong( pc[1] );
Ref a = LOCAL( s );
Ref b = pc[2];

if ( IsSmall( a ) ) {
	if ( IsSmall( b ) ) {
		RETURN( ToLong( a ) >= ToLong( b ) ? pc + ToLong( pc[3] ) + 3 : pc + 4 );
	} else if ( IsDouble( b ) ) {
		RETURN( static_cast< gngdouble_t >( SmallToLong( a ) ) >= gngFastDoubleValue( b ) ? pc + ToLong( pc[3] ) + 3 : pc + 4 );
	}
} else if ( IsDouble( a ) ) {
	if ( IsSmall( b ) ) {
		RETURN( gngFastDoubleValue( a ) >= static_cast< gngdouble_t >( SmallToLong( b ) ) ? pc + ToLong( pc[3] ) + 3 : pc + 4 );
	} else if ( IsDouble( b ) ) {
		RETURN( gngFastDoubleValue( a ) >= gngFastDoubleValue( b ) ? pc + ToLong( pc[3] ) + 3 : pc + 4 );
	} 
} 

throw Mishap( "Numbers needed" ).culprit( "First", refToString( a ) ).culprit( "Second", refToString( b ) );
RETURN( NULL ); // sop for compiler.
