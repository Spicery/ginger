<grammar start="EXPR">
	<group title="Expression">
		<rule state="EXPR" default="">
			<parse state="PRIMARY"/>
			<parse state="SECONDARY"/>
		</rule>
	</group>
	<group title="Primary">
		<rule state="PRIMARY" role.eq="literal">
			<element name="constant">
				<put key="type" value.from="type"/>
				<put key="value" value.from="value"/>
			</element>
			<!-- must.read value=";"/ -->
		</rule>
		<rule state="PRIMARY" role.eq="name">
			<element name="id">
				<put key="name" value.from="value"/>
			</element>
		</rule>
		<rule state="PRIMARY" token.eq="[">
			<element name="list">
				<parse.list.read state="EXPR" separator="," token.eq="]"/>
			</element>
		</rule>
		<rule state="PRIMARYLIST" default="">
			<parse state="PRIMARY"/>
			<if.read token.eq=",">
				<parse state="PRIMARYLIST"/>
			</if.read>
		</rule>
	</group>
	<group title="Secondary">
		<rule state="SECONDARY" token.eq="(">
			<save/>
			<element name="app">
				<restore/>
				<element name="seq">
					<parse.list.read state="EXPR" separator="," token.eq=")"/>
				</element>
			</element>
			<parse state="SECONDARY"/>
		</rule>
		<rule state="SECONDARY" precedence.gte="">
			<save/>
			<element name="sysapp">
				<put key="name" value.from="value"/>
				<restore/>
				<parse state="EXPR" precedence.from="precedence"/>
			</element>
			<parse state="SECONDARY"/>
		</rule>
		<rule state="SECONDARY" default=""/>
	</group>
</grammar>
