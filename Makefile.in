# Main constants.
prefix=@prefix@
exec_prefix=@prefix@
datarootdir=@datarootdir@
PACKAGE_TARNAME=@PACKAGE_TARNAME@
INSTALL_BIN=@bindir@
INSTALL_TOOL=@libexecdir@/@PACKAGE_TARNAME@
INSTALL_LIB=@datarootdir@/@PACKAGE_TARNAME@
INSTALL_DOC=@docdir@
SAVED_INSTALLATION_DIR=~/.config/ginger/saved-installation

# By default snapcraft uses $DESTDIR rather than --prefix. These
# variables allow the targets to work correctly with snapcraft.
USESNAP=@usesnap@
DD_INSTALL_TOOL=$(DESTDIR)$(INSTALL_TOOL)
DD_INSTALL_LIB=$(DESTDIR)$(INSTALL_LIB)
DD_INSTALL_BIN=$(DESTDIR)$(INSTALL_BIN)
DD_INSTALL_TOOL=$(DESTDIR)$(INSTALL_TOOL)
DD_INSTALL_TOOL=$(DESTDIR)$(INSTALL_TOOL)
DD_INSTALL_TOOL=$(DESTDIR)$(INSTALL_TOOL)

.PHONY: all
all:
	make -C apps $@
	make -C autodocs $@
	make -C projects $@

.PHONY: clean
clean:
	rm -rf _build/
	make -C apps $@
	make -C autodocs $@
	make -C projects $@

.PHONY: distclean
distclean: clean
	rm -f Makefile
	rm -f apps/Makefile
	rm -f apps/appginger/Makefile
	rm -f apps/appginger/cpp/Makefile
	rm -f apps/appginger/unittest/Makefile
	rm -f apps/autodocs/Makefile
	rm -f apps/automatic/machine/Makefile
	rm -f apps/automatic/metainfo/Makefile
	rm -f apps/automatic/simple/Makefile
	rm -f apps/automatic/sys/Makefile
	rm -f apps/automatic/sysfn/Makefile
	rm -f apps/common2gnx/Makefile
	rm -f apps/common2gnx/cpp/Makefile
	rm -f apps/fetchgnx/Makefile
	rm -f apps/fetchgnx/cpp/Makefile
	rm -f apps/fetchgnx/unittest/Makefile
	rm -f apps/file2gnx/Makefile
	rm -f apps/file2gnx/cpp/Makefile
	rm -f apps/file2gnx/unittest/Makefile
	rm -f apps/ginger/Makefile
	rm -f apps/ginger/cpp/Makefile
	rm -f apps/ginger-admin/Makefile
	rm -f apps/ginger-admin/cpp/Makefile
	rm -f apps/ginger-help/Makefile
	rm -f apps/ginger-help/cpp/Makefile
	rm -f apps/gprojlibtool/Makefile
	rm -f apps/gprojlibtool/cpp/Makefile
	rm -f apps/gvmtest/Makefile
	rm -f apps/gvmtest/cpp/Makefile
	rm -f apps/ivylibtool/cpp/Makefile
	rm -f apps/libgng/Makefile
	rm -f apps/libgng/cpp/Makefile
	rm -f apps/libgng/unittest/Makefile
	rm -f apps/libmetainfo/Makefile
	rm -f apps/libmetainfo/cpp/Makefile
	rm -f apps/libmetainfo/unittest/Makefile
	rm -f apps/lisp2gnx/Makefile
	rm -f apps/lisp2gnx/lsp/Makefile
	rm -f apps/tidymnx/Makefile
	rm -f apps/tidymnx/cpp/Makefile
	rm -f apps/shebang/Makefile
	rm -f apps/shebang/cpp/Makefile
	rm -f apps/simplifygnx/Makefile
	rm -f apps/simplifygnx/cpp/Makefile
	rm -f apps/simplifygnx/unittest/Makefile
	rm -f apps/gson2gnx/Makefile
	rm -f apps/gson2gnx/cpp/Makefile
	rm -f apps/lnx2mnx/Makefile
	rm -f apps/lnx2mnx/cpp/Makefile
	rm -f apps/src2lnx/Makefile
	rm -f apps/src2lnx/cpp/Makefile
	rm -f apps/lnx2csv/Makefile
	rm -f apps/lnx2csv/cpp/Makefile
	rm -f autodocs/Makefile
	rm -f projects/Makefile
	rm -f config.h
	rm -f config.status
	rm -f config.log
	rm -f autom4te.cache/*.* autom4te.cache/requests
	rmdir -p autom4te.cache
	rm -f configure

# These will be installed in /usr/local/bin and will be available
# on the programmer's path.
USEREXECUTABLES=\
	apps/appginger/cpp/ginger-cgi \
	apps/appginger/cpp/ginger-script \
	apps/appginger/cpp/ginger-info \
	apps/appginger/cpp/ginger-cli \
	apps/ginger/cpp/ginger \
	apps/ginger-admin/cpp/ginger-admin
	
# These will be installed in /usr/local/libexec/ginger and will not be
# available on the programmer's path. They are helper functions.
LIBEXECUTABLES=\
	apps/common2gnx/cpp/common2gnx \
	apps/common2gnx/cpp/cstyle2gnx \
	apps/fetchgnx/cpp/fetchgnx \
	apps/file2gnx/cpp/file2gnx \
	apps/ginger-help/cpp/ginger-help \
	apps/gprojlibtool/cpp/gprojlibtool \
	apps/ivylibtool/cpp/ivylibtool \
	apps/lisp2gnx/lsp/lisp2gnx \
	apps/shebang/cpp/shebang \
	apps/simplifygnx/cpp/simplifygnx \
	apps/tidymnx/cpp/tidymnx \
	apps/gson2gnx/cpp/gson2gnx \
	apps/src2lnx/cpp/src2lnx \
	apps/lnx2csv/cpp/lnx2csv \
	apps/lnx2mnx/cpp/lnx2mnx \
	apps/gvmtest/cpp/gvmtest

.PHONY: install
install: all 
	$(MAKE) install-as-is

.PHONY: install-as-is
install-as-is:
	# Installing user binaries into $(DESTDIR)$(INSTALL_BIN)
	# Installing toolchain binaries into $(DESTDIR)$(INSTALL_TOOL)
	# Installing support files $(DESTDIR)$(INSTALL_LIB)
	mkdir -p $(DD_INSTALL_TOOL)
	chmod a+rx,u+w $(DD_INSTALL_TOOL)
	mkdir -p $(DD_INSTALL_LIB)
	chmod a+rx,u+w $(DD_INSTALL_LIB)
	mkdir -p $(DD_INSTALL_LIB)/ginger
	chmod a+rx,u+w $(DD_INSTALL_LIB)/ginger
	mkdir -p $(DD_INSTALL_BIN)
	chmod a+rx,u+w $(DD_INSTALL_BIN)
	mkdir -p $(DD_INSTALL_LIB)/lisp2gnx
	chmod a+rx,u+w $(DD_INSTALL_LIB)/lisp2gnx
	mkdir -p $(DD_INSTALL_LIB)/gvmtest
	chmod a+rx,u+w $(DD_INSTALL_LIB)/gvmtest
	mkdir -p $(DD_INSTALL_LIB)/autodocs
	chmod a+rx,u+w $(DD_INSTALL_LIB)/autodocs
	#
	cp -r apps/ginger/usage $(DD_INSTALL_LIB)/ginger/
	cp -r apps/ginger-admin/admin-templates $(DD_INSTALL_LIB)
	( cd projects; tar cf - standard_library ) | ( cd $(DD_INSTALL_LIB); tar xf - )
	#echo Installing docs into $(DD_INSTALL_DOC)
	/usr/bin/install -m a=r AUTHORS BUGS COPYING NEWS THANKS $(DD_INSTALL_LIB)
	/usr/bin/install -m a=r apps/lisp2gnx/lsp/lisp2gnx.lsp $(DD_INSTALL_LIB)/lisp2gnx
	cp -r apps/gvmtest/cpp/help $(DD_INSTALL_LIB)/gvmtest
	/usr/bin/install $(LIBEXECUTABLES) $(DD_INSTALL_TOOL)
	/usr/bin/install $(USEREXECUTABLES) $(DD_INSTALL_BIN)
	# Copy the autodocs
	( cd autodocs/_build ; tar cf - . ) | ( cd $(DD_INSTALL_LIB)/autodocs ; tar xf - )

# N.B. The rm -rf commands are guarded by code that checks the
# paths end '/ginger'
.PHONY: uninstall
uninstall:
	# Removing user binaries from $(DESTDIR)$(INSTALL_BIN)
	rm -f $(DESTDIR)$(INSTALL_BIN)/ginger
	rm -f $(DESTDIR)$(INSTALL_BIN)/ginger-*
ifeq (ginger,$(notdir $(DESTDIR)$(INSTALL_TOOL)))
	# Removing the toolchain binaries from $(DESTDIR)$(INSTALL_TOOL)
	rm -rf $(DESTDIR)$(INSTALL_TOOL)
endif
ifeq (ginger,$(notdir $(DESTDIR)$(INSTALL_LIB)))
	# Removing the support files from $(DESTDIR)$(INSTALL_LIB)
	rm -rf $(DESTDIR)$(INSTALL_LIB)
endif

.PHONY: save-installation
save-installation:
	mkdir -p $(SAVED_INSTALLATION_DIR)/bin
	mkdir -p $(SAVED_INSTALLATION_DIR)/libexec/ginger
	mkdir -p $(SAVED_INSTALLATION_DIR)/share/ginger
	cp $(INSTALL_BIN)/ginger $(SAVED_INSTALLATION_DIR)/bin
	cp $(INSTALL_BIN)/ginger-* $(SAVED_INSTALLATION_DIR)/bin
	( cd $(INSTALL_TOOL); tar cf - . ) | ( cd $(SAVED_INSTALLATION_DIR)/libexec/ginger; tar xf - )
	( cd $(INSTALL_LIB); tar cf - . ) | ( cd $(SAVED_INSTALLATION_DIR)/share/ginger; tar xf - )

.PHONY: restore-saved-installation
restore-saved-installation:
	cp $(SAVED_INSTALLATION_DIR)/bin/* $(INSTALL_BIN)
	( cd $(SAVED_INSTALLATION_DIR)/libexec/ginger; tar cf - ) | ( cd $(INSTALL_TOOL); tar xf - . )
	( cd $(SAVED_INSTALLATION_DIR)/share/ginger; tar cf - ) | ( cd $(INSTALL_LIB); tar xf - . ) 


.PHONY: unitcheck
unitcheck:
	# To be done

.PHONY: funccheck
funccheck:
	(cd functests; nose2)

.PHONY: syscheck
syscheck:
	(cd systests; nose2)

.PHONY: check
check:
	make unitcheck
	make funccheck
	make syscheck
